@model WorkshoManager.Models.Order
@using Microsoft.AspNetCore.Identity
@inject UserManager<IdentityUser> UserManager

<h2>Szczegóły zlecenia</h2>

<dl class="row">
    <dt class="col-sm-3">Klient:</dt>
    <dd class="col-sm-9">@Model.Customer.LastName</dd>

    <dt class="col-sm-3">Pojazd:</dt>
    <dd class="col-sm-9">@Model.Vehicle.RegistrationNumber</dd>

    <dt class="col-sm-3">Opis:</dt>
    <dd class="col-sm-9">@Model.Description</dd>

    <dt class="col-sm-3">Status:</dt>
    <dd class="col-sm-9">@Model.Status</dd>
</dl>

@if (Model.Tasks?.Any() == true)
{
    <h4>Czynności serwisowe</h4>
    <ul>
        @foreach (var task in Model.Tasks)
        {
            var partsCost = task.UsedParts?.Sum(up => up.Quantity * up.Part.UnitPrice) ?? 0;
            var total = task.LaborCost + partsCost;

            <li>
                <strong>@task.Name</strong> – robocizna: <strong>@task.LaborCost zł</strong><br />
                Części:
                <ul>
                    @foreach (var part in task.UsedParts)
                    {
                        <li>@part.Part.Name – @part.Quantity × @part.Part.UnitPrice zł = @(part.Quantity * part.Part.UnitPrice) zł</li>
                    }
                </ul>
                <strong>SUMA: @total zł</strong>

                <br />
                <a asp-controller="UsedParts" asp-action="Create" asp-route-serviceTaskId="@task.Id" class="btn btn-sm btn-outline-primary">Dodaj części</a>
            </li>
        }
    </ul>

     
    var totalOrderCost = Model.Tasks.Sum(task =>
        task.LaborCost + (task.UsedParts?.Sum(up => up.Quantity * up.Part.UnitPrice) ?? 0));
     
    <h4>Łączny koszt zlecenia: <span class="text-success">@totalOrderCost zł</span></h4>
}
else
{
    <p>Brak czynności serwisowych.</p>
}

@if (User.IsInRole("Mechanik") && Model.MechanicId == UserManager.GetUserId(User))
{
    <a class="btn btn-success" asp-controller="ServiceTasks" asp-action="Create" asp-route-orderId="@Model.Id">Dodaj czynność</a>
}

<a asp-action="Index" class="btn btn-secondary mt-3">Powrót</a>


@if (User.IsInRole("Admin") || Model.MechanicId == UserManager.GetUserId(User))
{
    <a asp-action="EditStatus" asp-route-id="@Model.Id" class="btn btn-warning">Zmień status</a>
}


<hr />
<h4>Komentarze</h4>

@if (Model.Comments != null && Model.Comments.Any())
{
    <ul class="list-group">
        @foreach (var comment in Model.Comments.OrderBy(c => c.CreatedAt))
        {
            <li class="list-group-item">
                <strong>@comment.Author?.UserName</strong> - @comment.CreatedAt.ToString("g")
                <br />
                @comment.Content
            </li>
        }
    </ul>
}
else
{
    <p>Brak komentarzy.</p>
}


@if (User.Identity.IsAuthenticated)
{
    <form asp-controller="Comments" asp-action="Create" method="post">
        <input type="hidden" name="orderId" value="@Model.Id" />
        <div class="form-group mt-2">
            <label for="content">Dodaj komentarz:</label>
            <textarea name="content" class="form-control" required></textarea>
        </div>
        <button type="submit" class="btn btn-primary mt-2">Dodaj</button>
    </form>
}